import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { GetStaticProps } from "next";
import { useEffect, useState } from "react";
import { Input, Image } from "@chakra-ui/react";
import axios from "axios";
import SearchSection from "@/components/Home/SearchSection";
import Cards from "@/components/Home/Cards";
import Network404 from "./404";

export interface ICards {
  id: number;
  name: string;
  username: string;
  website: string;
}

interface Props {
  details: ICards[];
}

export default function Home({ details }: Props) {
  const [searchTerm, setSearchTerm] = useState<string>("");
  const [searchResult, setSearchResult] = useState<ICards[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [detailData, setDetailData] = useState<ICards[]>([]);
  const [filter, setFilter] = useState<any>(details);

  // Function to handle value input
  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {
    const term = event?.target.value;
    setSearchTerm(term);

    // Filter the items based on the search terms
    const result = detailData.filter((item) =>
      item.name.toLowerCase().includes(term.toLowerCase())
    );
    console.log(result);
    setSearchResult(result);
    console.log("love", detailData);
  };

  // Function that handles filter
  const filteredData: ICards[] =
    filter === "all"
      ? searchResult
      : searchResult.filter((item) => item.website.includes(filter));

  // Fetch and render the card
  useEffect(() => {
    setLoading(true);
    fetch("https://jsonplaceholder.typicode.com/users?_limit=10")
      .then((response) => response.json())
      .then((data) => {
        console.log(data);
        setDetailData(data);
        setLoading(false);
      })
      .catch((error) => {
        setError(error);
        setLoading(false);
      });
  }, []);

  // Set the data to load on refresh
  useEffect(() => {
    setSearchResult(detailData);
  }, [detailData]);

  return (
    <>
      <Head>
        <title>Judith Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {error ? (
        <Network404 />
      ) : (
        <main className={styles.container}>
          <div className={styles.wrapper}>
            <SearchSection 
                setFilter={setFilter} 
                handleSearch={handleSearch} 
                searchTerm={searchTerm}
                />
            <Cards filteredData={filteredData}/>
          </div>
        </main>
      )}
    </>
  );
}

export const getStaticProps: GetStaticProps<Props> = async () => {
  const details: ICards[] = [];

  return {
    props: {
      details,
    },
  };
};
